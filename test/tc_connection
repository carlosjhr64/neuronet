#!/usr/bin/env ruby
require 'test/unit'
require 'neuronet'

class TestConnection < Test::Unit::TestCase
  include Neuronet

  def test_connection
    Node.label = 'a'
    n = Node.new
    c = Connection.new n
    assert_equal '0*a:0', c.inspect
    assert_equal '0*a', c.to_s

    n = Node.new 1.25
    c = Connection.new n, 0.33
    assert_equal '0.33*b:1.25', c.inspect
    assert_equal n, c.node
    assert_equal 0.33, c.weight
    assert_equal 0.33*SQUASH[1.25], c.value
    assert_equal 0.33*SQUASH[1.25], c.partial
    assert_equal 0.33*SQUASH[1.25], c.update

    Neuronet.noise = NO_NOISE
    c.backpropagate(0.01, 1.0)
    assert_equal 0.33+SQUASH[1.25]*0.01, c.weight
    # but the input node remains the same!
    assert_equal 'b:1.25', n.inspect
    Neuronet.noise = NOISE # Restore
  end
end
