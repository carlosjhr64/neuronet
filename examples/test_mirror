#!/usr/bin/env ruby
require 'neuronet'

# This tests YinYang's mirror.

yinyang = Neuronet::YinYang.bless Neuronet::FeedForward.new([3, 3, 3])
input = [-1.0, 0.0, 1.0]
yinyang.set(input).update

puts '### YinYang ###'
puts 'Input:'
puts input.join(",\t")

puts 'In:'
puts yinyang.entrada.map(&:activation).join(",\t")

# Yin and Yang are one and the same middle layer.
puts 'Yin/Yang:'
puts yinyang.yin.map(&:activation).join(",\t")
puts yinyang.yang.map(&:activation).join(",\t")

puts 'Out:'
puts yinyang.salida.map(&:activation).join(",\t")

puts 'Output:'
puts yinyang.output.join(",\t")

puts
puts

brahma = Neuronet::FeedForward.new([3, 6, 6])
Neuronet::Brahma.bless Neuronet::Yang.bless brahma
input = [-1.0, 0.0, 1.0]
brahma.set(input).update

puts '### BrahmaYang ###'
puts 'Input:'
puts input.join(",\t")

puts 'In:'
puts brahma.entrada.map(&:activation).join(",\t")

# Yin and Yang are one and the same middle layer.
puts 'Yin/Yang:'
puts brahma.yin.map(&:activation).join(",\t")
puts brahma.yang.map(&:activation).join(",\t")

puts 'Out:'
puts brahma.salida.map(&:activation).join(",\t")

puts 'Output:'
puts brahma.output.join(",\t")
